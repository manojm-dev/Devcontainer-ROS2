services:
  ros2:
    # Build Configuration
    build:
        context: .
        dockerfile: dockerfile

    # Interactive Shell Settings
    stdin_open: true    # Allow interaction via standard input (terminal).
    tty: true           # Allocate a pseudo-TTY for an interactive shell to pervent termination of container with no long running process.

    # Network Mode Configuration
    network_mode: host  # Utilize host network stack for seamless communication.

    # Linux Capabilities
    cap_add:
      - SYS_PTRACE      # Allow process tracing capabilities for gpu accessing

    # Environment Variables
    environment:
      # Display
      - DISPLAY=$DISPLAY              # Specify X11 display server.
      - XAUTHORITY=/root/.XAuthority  # Point to X11 authorization file location.

      - ROS_DOMAIN_ID=3               # Define ROS domain ID for communication.
      - ROS_LOCALHOST_ONLY=1          # Restrict ROS communication to localhost.

    # Device Configuration
    devices:
      # GPU Devices
      - /dev/dri/card1:/dev/dri/card1
      - /dev/dri/renderD128:/dev/dri/renderD128 
      # USB Devices
      #- /dev/ttyUSB0:/dev/ttyUSB0

    # Volume Configuration
    volumes:
      # Display
      - /tmp/.X11-unix:/tmp/.X11-unix:rw                        # Mounts X11 Socket.
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.XAuthority:rw   # Mounts X11 Authorization file.

      # User Source file
      - ../ws/:/root/ws:cache                           # Syncs the source Directory (ROS Workspace).
      - ../.devcontainer/:/root/ws/.devcontainer:cache  # Mounts Devcontainer Configs.

      # Models & Map file
      - ../models/:/root/.gazebo/models:cache   # Mounts Gazebo Models to reduces initial loading time.
      - ../data/:/root/ws/data:cache            # Mounts pdf, pgm, etc. files for viewing/edition in host system GUI tools.